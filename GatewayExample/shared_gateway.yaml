---
apiVersion: v1
kind: Namespace
metadata:
  name: gateway
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: istio
  namespace: gateway
  annotations:
    # Cert Manager specific: only if you automaticly issue certificate
    # when readt, switch to production-cluster-issuer
    cert-manager.io/cluster-issuer: production-cluster-issuer
spec:
  gatewayClassName: istio
  listeners:
  - name: default-http
    hostname: "*.bebr.live"
    port: 80 # requred for letsencrypt
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: All # requred for letsencrypt
  - name: https-httpbin
    protocol: HTTPS # Other possible value is `TLS`
    port: 443
    hostname: "httpbin.bebr.live"
    tls:
      mode: Terminate # If protocol is `TLS`, `Passthrough` is a possible mode
      certificateRefs:
      - kind: Secret
        group: ""
        name: httpbin-bebr-live-cert
    allowedRoutes:
      namespaces:
        from: All
  - name: https-microbot
    protocol: HTTPS # Other possible value is `TLS`
    port: 443
    hostname: "microbot.bebr.live"
    tls:
      mode: Terminate # If protocol is `TLS`, `Passthrough` is a possible mode
      certificateRefs:
      - kind: Secret
        group: ""
        name: microbot-bebr-live-cert
    allowedRoutes:
      namespaces:
        from: All
  - name: https-kiali
    protocol: HTTPS # Other possible value is `TLS`
    port: 443
    hostname: "kiali.bebr.live"
    tls:
      mode: Terminate # If protocol is `TLS`, `Passthrough` is a possible mode
      certificateRefs:
      - kind: Secret
        group: ""
        name: kiali-bebr-live-cert
    allowedRoutes:
      namespaces:
        from: All
  - name: https-grafana
    protocol: HTTPS # Other possible value is `TLS`
    port: 443
    hostname: "grafana.bebr.live"
    tls:
      mode: Terminate # If protocol is `TLS`, `Passthrough` is a possible mode
      certificateRefs:
      - kind: Secret
        group: ""
        name: grafana-bebr-live-cert
    allowedRoutes:
      namespaces:
        from: All
  - name: https-prometheus
    protocol: HTTPS # Other possible value is `TLS`
    port: 443
    hostname: "prometheus.bebr.live"
    tls:
      mode: Terminate # If protocol is `TLS`, `Passthrough` is a possible mode
      certificateRefs:
      - kind: Secret
        group: ""
        name: prometheus-bebr-live-cert
    allowedRoutes:
      namespaces:
        from: All